angular.module("adf",["adf.provider","ui.bootstrap"]).value("adfTemplatePath","../src/templates/").value("rowTemplate",'<adf-dashboard-row row="row" adf-model="adfModel" collapsible="collapsible" edit-mode="editMode" ng-repeat="row in column.rows" />').value("columnTemplate",'<adf-dashboard-column column="column" adf-model="adfModel" collapsible="collapsible" edit-mode="editMode" ng-repeat="column in row.columns" />').value("adfVersion","0.8.0-SNAPSHOT");
angular.module("adf").directive("adfDashboardColumn",function(e,m,k,g,n){function q(a,c,b){var h=c.widgets;a.$apply(function(){h.splice(b.newIndex,0,h.splice(b.oldIndex,1)[0])})}function f(a,c){for(var b=null,h=0;h<a.widgets.length;h++){var l=a.widgets[h];if(l.wid===c){b=l;break}}return b}function a(b,c){for(var p=null,h=0;h<b.rows.length;h++){for(var l=b.rows[h],v=0;v<l.columns.length;v++){var d=l.columns[v];if(d.cid===c){p=d;break}else d.rows&&(p=a(d,c))}if(p)break}return p}function b(a){return(a=
a.getAttribute("adf-id"))?parseInt(a):-1}function d(d,c,p,h){var l=b(h.from);if(c=a(c,l)){var l=b(h.item),v=f(c,l);v?d.$apply(function(){p.widgets.splice(h.newIndex,0,v)}):e.warn("could not find widget with id "+l)}else e.warn("could not find column with id "+l)}function r(a,c,b){a.$apply(function(){c.widgets.splice(b.oldIndex,1)})}function u(a,c,b,h){var l=Sortable.create(c[0],{group:"widgets",handle:".fa-arrows",ghostClass:"placeholder",animation:150,onAdd:function(c){d(a,b,h,c)},onRemove:function(c){r(a,
h,c)},onUpdate:function(c){q(a,h,c)}});c.on("$destroy",function(){l.destroy()})}return{restrict:"E",replace:!0,scope:{column:"=",editMode:"=",adfModel:"=",collapsible:"="},templateUrl:k+"dashboard-column.html",link:function(a,c){var b=a.column;b.cid||(b.cid=n.id());angular.isDefined(b.rows)&&angular.isArray(b.rows)?m(g)(a,function(a){c.append(a)}):u(a,c,a.adfModel,b)}}});
angular.module("adf").directive("adfDashboard",function(e,m,k,g,n){function q(a,b,d){d=d||0;angular.isDefined(a.rows)&&angular.forEach(a.rows,function(a){angular.forEach(a.columns,function(a){a.widgets||(a.widgets=[]);if(angular.isDefined(b[d])&&!angular.isDefined(a.rows)){var f=b[d];if(f.widgets&&0<f.widgets.length)for(var c=f.widgets.shift();c;)a.widgets.push(c),c=f.widgets.shift();d++}d=q(a,b,d)})});return d}function f(a,b){b=b||[];angular.isDefined(a.rows)&&angular.forEach(a.rows,function(a){angular.forEach(a.columns,
function(a){b.push(a);f(a,b)})});return b}return{replace:!0,restrict:"EA",transclude:!1,scope:{structure:"@",name:"@",collapsible:"@",editable:"@",adfModel:"=",adfWidgetFilter:"="},controller:function(a){var b={},d={},r={},u={},t=a.name;a.$watch("adfModel",function(c,p){if(null!==p||null===c&&null===p)b=a.adfModel,r=a.adfWidgetFilter,b&&b.rows||(u=a.structure,(d=g.structures[u])?(b?b.rows=angular.copy(d).rows:b=angular.copy(d),b.structure=u):m.error("could not find structure "+u)),b?(b.title||(b.title=
"",b.protect=!1,b.selectedItem="fa-home",b.alias="",b.weight=10),a.model=b):m.error("could not find or create model")},!0);a.editMode=!1;a.editClass="";a.toggleEditMode=function(){a.editMode=!a.editMode;a.editMode&&(a.modelCopy=angular.copy(a.adfModel,{}));a.editMode||e.$broadcast("adfDashboardChanged",t,b)};a.cancelEditMode=function(){a.editMode=!1;a.modelCopy=angular.copy(a.modelCopy,a.adfModel)};a.deleteBoard=function(){e.$broadcast("adfDashboardRequestedForDelete",t)};a.editDashboardDialog=function(){a.icons=
"fa-home fa-search fa-dashboard fa-tasks fa-gear fa-warning".split(" ");a.selectedItem=a.icons[0];var c=a.$new();c.copy={title:b.title,protect:b.protect,selectedItem:b.selectedItem,alias:b.alias,weight:b.weigth};c.structures=g.structures;var p=k.open({scope:c,templateUrl:n+"dashboard-edit.html"});a.changeStructure=function(a,c){m.info("change structure to "+a);var p=b,d=f(p),e=0;for(p.rows=angular.copy(c.rows);e<d.length;)e=q(p,d,e)};c.closeDialog=function(){console.log(a);console.log(c);b.title=
c.copy.title;b.protect=c.copy.protect;b.selectedItem=c.copy.selectedItem;b.alias=c.copy.alias;b.weight=c.copy.weight;p.close();c.$destroy()}};a.saveAsJson=function(){a.toJSON="";a.toJSON=angular.toJson(a.adfModel);var c=new Blob([a.toJSON],{type:"application/json;charset=utf-8;"}),b=angular.element("<a></a>");b.attr("href",window.URL.createObjectURL(c));b.attr("download",t+".json");b[0].click()};a.addWidgetDialog=function(){var c=a.$new(),b;angular.isFunction(r)?(b={},angular.forEach(g.widgets,function(a,
c){r(a,c)&&(b[c]=a)})):b=g.widgets;c.widgets=b;var h=k.open({scope:c,templateUrl:n+"widget-add.html"});c.addWidget=function(a){var b={},d=g.widgets[a].config;d&&(b=angular.copy(d));c.model.rows[0].columns[0].widgets.unshift({type:a,config:b});h.close();c.$destroy()};c.closeDialog=function(){h.close();c.$destroy()}}},compile:function(a,b){angular.isDefined(b.editable)||(b.editable=!0)},link:function(a,b,d){a.name=d.name;a.structure=d.structure;a.editable=d.editable},templateUrl:n+"dashboard.html"}});
"use strict";
angular.module("adf.provider",[]).provider("dashboard",function(){var e={},m="",k={},g='<div class="alert alert-danger">{}</div>',n='<div class="progress progress-striped active">\n<div class="progress-bar" role="progressbar" style="width: 100%">\n<span class="sr-only">loading ...</span>\n</div>\n</div>';this.widget=function(q,f){var a=angular.extend({reload:!1},f);if(a.edit){var b={reload:!0};angular.extend(b,a.edit);a.edit=b}e[q]=a;return this};this.widgetsPath=function(e){m=e;return this};this.structure=
function(e,f){k[e]=f;return this};this.messageTemplate=function(e){g=e;return this};this.loadingTemplate=function(e){n=e;return this};this.$get=function(){var q=0;return{widgets:e,widgetsPath:m,structures:k,messageTemplate:g,loadingTemplate:n,id:function(){return++q}}}});
angular.module("adf").directive("adfDashboardRow",function(e,m,k){return{restrict:"E",replace:!0,scope:{row:"=",adfModel:"=",editMode:"=",collapsible:"="},templateUrl:m+"dashboard-row.html",link:function(g,m){angular.isDefined(g.row.columns)&&angular.isArray(g.row.columns)&&e(k)(g,function(e){m.append(e)})}}});"use strict";
angular.module("adf").directive("adfWidgetContent",function(e,m,k,g,n,q,f,a,b,d){function r(a){var d=a;0<=a.indexOf("{widgetsPath}")&&(d=a.replace("{widgetsPath}",b.widgetsPath).replace("//","/"),0===d.indexOf("/")&&(d=d.substring(1)));return d}function u(a){var b=m.defer();if(a.template)b.resolve(a.template);else if(a.templateUrl){var d=n.get(a.templateUrl);d?b.resolve(d):(d=k.getTrustedResourceUrl(r(a.templateUrl)),g.get(d).success(function(d){n.put(a.templateUrl,d);b.resolve(d)}).error(function(){b.reject("could not load template")}))}return b.promise}
function t(c,d,h){var l=c.model,g=c.content,k=c.$new();l.config||(l.config={});k.config=l.config;var n={$scope:k,widget:l,config:l.config},r={};r.$tpl=u(g);g.resolve&&angular.forEach(g.resolve,function(b,c){angular.isString(b)?r[c]=a.get(b):r[c]=a.invoke(b,b,n)});m.all(r).then(function(a){angular.extend(a,n);d.html(a.$tpl);g.controller&&(a=f(g.controller,a),g.controllerAs&&(k[g.controllerAs]=a),d.children().data("$ngControllerController",a));q(d.contents())(k)},function(a){var c="Could not resolve all promises";
a&&(c+=": "+a);e.warn(c);d.html(b.messageTemplate.replace(/{}/g,c))});h&&h.$destroy();return k}return{replace:!0,restrict:"EA",transclude:!1,scope:{model:"=",content:"="},link:function(a,b){var e=t(a,b,null),f,g;a.changeReloading=function(b){a.$parent.reloadingProgress=b};a.$on("$destroy",function(){"function"===typeof f&&f();"function"===typeof g&&g()});a.$on("widgetConfigChanged",function(){e=t(a,b,e);console.log("widgetConfigChanged.....")});a.$on("widgetReload",function(){console.log(e);console.log(a);
1==a.content.refresh?e.reloadIt():(a.$parent.reloadingProgress=!0,e=t(a,b,e),a.$parent.reloadingProgress=!1);console.log("widgetReload.....")});a.content.reload&&1==a.content.reload&&(f=d.$on("globalWidgetReload",function(){1==a.content.refresh?e.reloadIt(a):(a.$parent.reloadingProgress=!0,e=t(a,b,e),a.$parent.reloadingProgress=!1);console.log("globalWidgetReload.....")}),g=d.$on("globalWidgetRecreate",function(){a.$parent.reloadingProgress=!0;e=t(a,b,e);a.$parent.reloadingProgress=!1;console.log("globalWidgetRecreate.....")}))}}});
"use strict";
angular.module("adf").directive("adfWidget",function(e,m,k,g){function n(f){var a=f.definition;if(a){var b=k.widgets[a.type];if(b){a.title||(a.title=b.title);a.wid||(a.wid=k.id());f.widget=angular.copy(b);(b=a.config)?angular.isString(b)&&(b=angular.fromJson(b)):b={};f.config=b;f.title=a.title;a:switch(a=f.collapsible,angular.isDefined(a)?a.toLowerCase():null){case "true":case "yes":case "1":a=!0;break a;case "false":case "no":case "0":case null:a=!1;break a;default:a=Boolean(a)}f.collapsible=a;f.isCollapsed=
!1}else e.warn("could not find widget "+a.type)}else e.debug("definition not specified, widget was probably removed")}function q(f,a){var b=f.definition;b?(f.close=function(){var d=f.col;if(d){var e=d.widgets.indexOf(b);0<=e&&d.widgets.splice(e,1)}a.remove()},f.reload=function(){f.$broadcast("widgetReload")},f.edit=function(){var a=f.$new(),b=m.open({scope:a,templateUrl:g+"widget-edit.html"});console.log(a);a.closeDialog=function(){b.close();a.$destroy();var e=f.widget;e.edit&&e.edit.reload&&f.$broadcast("widgetConfigChanged")}}):
e.debug("widget not found")}return{replace:!0,restrict:"EA",transclude:!1,templateUrl:g+"widget.html",scope:{definition:"=",col:"=column",editMode:"=",collapsible:"="},compile:function(){return{pre:n,post:q}}}});
angular.module("adf").run(["$templateCache",function(e){e.put("../src/templates/dashboard-column.html",'<div adf-id={{column.cid}} class=column ng-class=column.styleClass ng-model=column.widgets> <adf-widget ng-repeat="definition in column.widgets" definition=definition column=column edit-mode=editMode collapsible=collapsible>  </adf-widget></div> ');e.put("../src/templates/dashboard-edit.html",'<div class=modal-header> <button type=button class=close ng-click=closeDialog() aria-hidden=true>&times;</button> <h4 class=modal-title>Edit Dashboard</h4> </div> <div class=modal-body> <form role=form> <div class=form-group> <label for=dashboardTitle>Dashboard Title</label> <input type=text class=form-control id=dashboardTitle ng-model=copy.title required> </div> <div class=form-group> <label>Promote to Menu </label> <input type=checkbox ng-model=copy.protect name=protect />  <div class=form-group ng-if=copy.protect> <label for=dashboardAlias>Dashboard Alias</label> <input type=text class=form-control id=dashboardAlias ng-model=copy.alias >  <label for=dashboardWeight>Dashboard Weight</label> <input type=text class=form-control id=dashboardWeight ng-model=copy.weight> <p>Selected Icon : <i class="fa {{copy.selectedItem}}"> {{copy.selectedItem}}</i></p><select ng-model="copy.selectedItem"><option ng-repeat="item in icons" value="{{item}}">{{item}}</option></select></div> </div> <hr/> <div class=form-group> <label>Dashboard Structure</label> <div class=radio ng-repeat="(key, structure) in structures"> <label> <input type=radio value={{key}} ng-model=model.structure ng-change="changeStructure(key, structure)"> {{key}} </label> </div> </div> </form> </div> <div class=modal-footer> <button type=button class="btn btn-primary" ng-click=closeDialog()>Close</button> </div> ');
e.put("../src/templates/dashboard-row.html","<div class=row ng-class=row.styleClass>  </div> ");e.put("../src/templates/dashboard.html",'<div class=dashboard-container> <h1> {{model.title}} <span class=pull-right> <a href ng-if=editMode title="add new widget" ng-click=addWidgetDialog()> <i class="fa fa-plus-square-o"></i> </a> <a href ng-if=editMode title="\'save as json\'" ng-click=saveAsJson()> <i class="fa fa-cloud-download"></i> </a><a href ng-if=editMode title="edit dashboard" ng-click=editDashboardDialog()> <i class="fa fa-gear"></i> </a> <a href ng-if=editable title="{{editMode ? \'save changes\' : \'enable edit mode\'}}" ng-click=toggleEditMode()> <i class=fa x-ng-class="{\'fa-th-large\' : !editMode, \'fa-save\' : editMode}"></i> </a> <a href ng-if=editMode title="delete dashboard" ng-click=deleteBoard()> <i class="fa fa-trash-o"></i> </a> <a href ng-if=editMode title="undo changes" ng-click=cancelEditMode()> <i class="fa fa-undo "></i> </a> </span> </h1> <div class=dashboard x-ng-class="{\'edit\' : editMode}"> <adf-dashboard-row row=row adf-model=model collapsible=collapsible ng-repeat="row in model.rows" edit-mode=editMode> </adf-dashboard-row></div> </div> ');
e.put("../src/templates/widget-add.html",'<div class=modal-header> <button type=button class=close ng-click=closeDialog() aria-hidden=true>&times;</button> <h4 class=modal-title>Add new widget</h4> </div> <div class=modal-body> <div style="display: inline-block;"> <dl class=dl-horizontal> <dt ng-repeat-start="(key, widget) in widgets"> <a href ng-click=addWidget(key)> {{widget.title}} </a> </dt> <dd ng-repeat-end="" ng-if=widget.description> {{widget.description}} </dd> </dl> </div> </div> <div class=modal-footer> <button type=button class="btn btn-primary" ng-click=closeDialog()>Close</button> </div>');
e.put("../src/templates/widget-edit.html",'<div class=modal-header> <button type=button class=close ng-click=closeDialog() aria-hidden=true>&times;</button> <h4 class=modal-title>{{widget.title}}</h4> </div> <div class=modal-body> <div ng-if="widget.edit == false"><form role=form> <div class=form-group> <label for=widgetTitle>Title</label> <input type=text class=form-control id=widgetTitle ng-model=definition.title placeholder="Enter title" required> </div> </form></div> <div ng-if=widget.edit> <adf-widget-content model=definition content=widget.edit> </adf-widget-content></div> </div> <div class=modal-footer> <button type=button class="btn btn-primary" ng-click=closeDialog()>Close</button> </div>');
e.put("../src/templates/widget.html",'<div adf-id={{definition.wid}} class="widget panel panel-default"> <div class="panel-heading clearfix"> <h3 class=panel-title> {{definition.title}} <span class=pull-right> <a href title="reload widget content" ng-if=widget.reload ng-click=reload()> <i class="fa " ng-class="{\'fa-spinner fa-spin\': reloadingProgress, \'fa-refresh\': !reloadingProgress}"></i> </a>  <a href title="change widget location" class=adf-move ng-if=editMode> <i class="fa fa-arrows"></i> </a>  <a href title="collapse widget" ng-show="collapsible && !isCollapsed" ng-click="isCollapsed = !isCollapsed"> <i class="fa fa-minus"></i> </a>  <a href title="expand widget" ng-show="collapsible && isCollapsed" ng-click="isCollapsed = !isCollapsed"> <i class="fa fa-plus"></i> </a>  <a href title="edit widget configuration" ng-click=edit() ng-if=editMode> <i class="fa fa-gear"></i> </a>  <a href title="remove widget" ng-click=close() ng-if=editMode> <i class="fa fa-times"></i> </a> </span> </h3> </div> <div class=panel-body collapse=isCollapsed> <adf-widget-content model=definition content=widget> </adf-widget-content></div> </div> ')}]);
